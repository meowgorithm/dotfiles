#!/bin/bash
set -euo pipefail

source "$PWD/bash/bash_funcs"

BLACK=0
GREEN=2
YELLOW=3
BLUE=4
WHITE=7

status() {
    local text="$1"
    local bg_color="$2"
    local fg_color="$3"

    # Convert color numbers to ANSI codes
    local bg_code=$((bg_color < 8 ? bg_color + 40 : bg_color + 92))
    local fg_code=$((fg_color < 8 ? fg_color + 30 : fg_color + 82))

    local padding
    padding=6
    printf "\x1b[1;${bg_code};${fg_code}m %-${padding}s \x1b[m" "$text"
}

SKIP="$(status "SKIP" "$BLUE" "$WHITE")"
LINKED="$(status "LINKED" "$GREEN" "$BLACK")"
BACKUP="$(status "BACKUP" "$YELLOW" "$BLACK")"

link() {
    local source="$PWD/$1"
    local target="$2"
    mkdir -p "$(dirname "$target")"
    if [ -L "$target" ] && [ "$(readlink "$target")" = "$source" ]; then
        # Link already exists.
        echo "$SKIP Link $target -> $source exists"
    elif [ -L "$target" ]; then
        # Wrong symlink exists, just replace it.
        ln -sf "$source" "$target"
        echo "$LINKED $1 -> $target (replaced wrong symlink)"
    elif [ -e "$target" ]; then
        # There's a real file/directory there. Back it up, then link.
        mv "$target" "$target.backup.$(date +%s)"
        ln -sf "$source" "$target"
        echo "$BACKUP Linked $source to $target (backed up existing)"
    else
        # Nothing there, create link.
        ln -sf "$source" "$target"
        echo "$LINKED $1 -> $target"
    fi
}

case "$(which_os)" in
darwin)
    brew bundle -v
    ;;
void)
    grep -vE '^\s*#|^\s*$' Xbpsfile | xargs sudo xbps-install -y
    ;;
esac

printf '\n'

# Git
link "git/config" "$HOME/.config/git/config"
link "git/ignore" "$HOME/.config/git/ignore"

# Bash
link "bash/bashrc" "$HOME/.bashrc"
link "bash/bash_profile" "$HOME/.bash_profile"
link "bash/bash_funcs" "$HOME/.local/share/meowgorithm/bash_funcs"
link "bash/rc.gpg" "$HOME/.local/share/meowgorithm/rc.gpg"

# Tmux
link "tmux.conf" "$HOME/.tmux.conf"

# Bash setup
if ! grep -q "$(which bash)" /etc/shells; then
    echo "Adding $(which bash) to /etc/shells; will ask sudo password."
    which bash | sudo tee -a /etc/shells
    chsh -s "$(which bash)"
fi
